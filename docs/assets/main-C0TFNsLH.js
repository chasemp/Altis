(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function n(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(t){if(t.ep)return;t.ep=!0;const i=n(t);fetch(t.href,i)}})();class l{constructor(){this.isSupported=this.checkSupport(),this.credentials=new Map,this.authCount=0,this.currentUserId=null,this.currentCredentialId=null}checkSupport(){return!!(navigator.credentials&&window.PublicKeyCredential)}generateChallenge(){const e=new Uint8Array(32);return crypto.getRandomValues(e),e}arrayBufferToBase64URL(e){const n=new Uint8Array(e);let s="";for(let t=0;t<n.byteLength;t++)s+=String.fromCharCode(n[t]);return btoa(s).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}base64URLToArrayBuffer(e){const n=e.replace(/-/g,"+").replace(/_/g,"/"),s=atob(n),t=new Uint8Array(s.length);for(let i=0;i<s.length;i++)t[i]=s.charCodeAt(i);return t.buffer}async register(e=null){if(!this.isSupported)throw new Error("WebAuthn is not supported in this browser");try{e||(e="user_"+Date.now()+"_"+Math.random().toString(36).substr(2,9));const s={publicKey:{challenge:this.generateChallenge(),rp:{name:"Altis",id:window.location.hostname},user:{id:new TextEncoder().encode(e),name:e,displayName:"Altis User"},pubKeyCredParams:[{type:"public-key",alg:-7},{type:"public-key",alg:-257}],authenticatorSelection:{authenticatorAttachment:"platform",userVerification:"required",residentKey:"required"},timeout:6e4,attestation:"none"}},t=await navigator.credentials.create(s),i={id:t.id,rawId:this.arrayBufferToBase64URL(t.rawId),publicKey:this.arrayBufferToBase64URL(t.response.publicKey),userId:e,createdAt:new Date().toISOString()};return this.credentials.set(t.id,i),this.currentUserId=e,this.currentCredentialId=t.id,localStorage.setItem("altis_credentials",JSON.stringify(Array.from(this.credentials.entries()))),localStorage.setItem("altis_user_id",e),localStorage.setItem("altis_credential_id",t.id),{success:!0,credentialId:t.id,userId:e,message:"Biometric credential created successfully!"}}catch(n){throw console.error("Registration failed:",n),new Error(`Registration failed: ${n.message}`)}}async authenticate(){if(!this.isSupported)throw new Error("WebAuthn is not supported in this browser");try{if(this.loadStoredCredentials(),this.credentials.size===0)throw new Error("No credentials found. Please register first.");const e=this.generateChallenge(),n=Array.from(this.credentials.keys()).map(o=>this.base64URLToArrayBuffer(o)),s={publicKey:{challenge:e,allowCredentials:n.map(o=>({type:"public-key",id:o,transports:["internal"]})),userVerification:"required",timeout:6e4}},t=await navigator.credentials.get(s),i=this.arrayBufferToBase64URL(t.rawId),r=this.credentials.get(i);if(!r)throw new Error("Credential not found");return this.authCount++,this.currentUserId=r.userId,this.currentCredentialId=i,localStorage.setItem("altis_auth_count",this.authCount.toString()),{success:!0,credentialId:i,userId:r.userId,authCount:this.authCount,message:"Authentication successful!"}}catch(e){throw console.error("Authentication failed:",e),new Error(`Authentication failed: ${e.message}`)}}loadStoredCredentials(){try{const e=localStorage.getItem("altis_credentials");if(e){const i=JSON.parse(e);this.credentials=new Map(i)}const n=localStorage.getItem("altis_user_id"),s=localStorage.getItem("altis_credential_id"),t=localStorage.getItem("altis_auth_count");n&&(this.currentUserId=n),s&&(this.currentCredentialId=s),t&&(this.authCount=parseInt(t,10))}catch(e){console.error("Failed to load stored credentials:",e)}}isRegistered(){return this.loadStoredCredentials(),this.credentials.size>0}logout(){this.currentUserId=null,this.currentCredentialId=null,this.authCount=0,localStorage.removeItem("altis_user_id"),localStorage.removeItem("altis_credential_id"),localStorage.removeItem("altis_auth_count")}getCurrentUser(){return{userId:this.currentUserId,credentialId:this.currentCredentialId,authCount:this.authCount,isAuthenticated:!!this.currentUserId}}isAuthenticated(){return!!this.currentUserId}}class d{constructor(){this.webauthn=new l,this.elements=this.initializeElements(),this.initializeApp()}initializeElements(){return{statusIndicator:document.getElementById("status-indicator"),statusText:document.getElementById("status-text"),registerBtn:document.getElementById("register-btn"),authenticateBtn:document.getElementById("authenticate-btn"),logoutBtn:document.getElementById("logout-btn"),userInfo:document.getElementById("user-info"),userId:document.getElementById("user-id"),credentialId:document.getElementById("credential-id"),authCount:document.getElementById("auth-count"),authContainer:document.getElementById("auth-container"),content:document.getElementById("content")}}async initializeApp(){try{if(!this.webauthn.isSupported){this.updateStatus("error","WebAuthn not supported in this browser"),this.disableAllButtons();return}this.webauthn.loadStoredCredentials(),this.webauthn.isRegistered()?(this.updateStatus("loading","Checking authentication..."),this.webauthn.isAuthenticated()?this.showAuthenticatedState():this.showRegisteredState()):this.showUnregisteredState(),this.setupEventListeners()}catch(e){console.error("App initialization failed:",e),this.updateStatus("error","Initialization failed")}}setupEventListeners(){this.elements.registerBtn.addEventListener("click",()=>this.handleRegister()),this.elements.authenticateBtn.addEventListener("click",()=>this.handleAuthenticate()),this.elements.logoutBtn.addEventListener("click",()=>this.handleLogout())}async handleRegister(){try{this.updateStatus("loading","Creating biometric key..."),this.disableAllButtons();const e=await this.webauthn.register();e.success&&(this.updateStatus("authenticated","Biometric key created successfully!"),this.showAuthenticatedState(),this.showUserInfo(e.userId,e.credentialId))}catch(e){console.error("Registration error:",e),this.updateStatus("error",e.message),this.showRegisteredState()}}async handleAuthenticate(){try{this.updateStatus("loading","Authenticating with biometric..."),this.disableAllButtons();const e=await this.webauthn.authenticate();e.success&&(this.updateStatus("authenticated","Authentication successful!"),this.showAuthenticatedState(),this.showUserInfo(e.userId,e.credentialId,e.authCount))}catch(e){console.error("Authentication error:",e),this.updateStatus("error",e.message),this.showRegisteredState()}}handleLogout(){this.webauthn.logout(),this.updateStatus("loading","Logged out"),this.showRegisteredState()}updateStatus(e,n){this.elements.statusIndicator.className=`status-indicator ${e}`,this.elements.statusText.textContent=n,e==="loading"?this.disableAllButtons():e==="error"&&this.showRegisteredState()}showUnregisteredState(){this.elements.registerBtn.disabled=!1,this.elements.authenticateBtn.disabled=!0,this.elements.logoutBtn.disabled=!0,this.elements.userInfo.style.display="none",this.elements.content.style.display="none",this.elements.authContainer.style.display="block"}showRegisteredState(){this.elements.registerBtn.disabled=!0,this.elements.authenticateBtn.disabled=!1,this.elements.logoutBtn.disabled=!1,this.elements.userInfo.style.display="none",this.elements.content.style.display="none",this.elements.authContainer.style.display="block"}showAuthenticatedState(){this.elements.registerBtn.disabled=!0,this.elements.authenticateBtn.disabled=!0,this.elements.logoutBtn.disabled=!1,this.elements.userInfo.style.display="block",this.elements.content.style.display="block",this.elements.authContainer.style.display="none"}showUserInfo(e,n,s=0){this.elements.userId.textContent=e,this.elements.credentialId.textContent=n,this.elements.authCount.textContent=s}disableAllButtons(){this.elements.registerBtn.disabled=!0,this.elements.authenticateBtn.disabled=!0,this.elements.logoutBtn.disabled=!0}showNotification(e,n="info"){const s=document.createElement("div");s.className=`notification notification-${n}`,s.textContent=e,Object.assign(s.style,{position:"fixed",top:"20px",right:"20px",padding:"1rem 1.5rem",borderRadius:"10px",color:"white",fontWeight:"600",zIndex:"1000",maxWidth:"300px",wordWrap:"break-word",boxShadow:"0 10px 20px rgba(0, 0, 0, 0.2)",transform:"translateX(100%)",transition:"transform 0.3s ease"});const t={success:"#48bb78",error:"#f56565",info:"#4299e1",warning:"#ed8936"};s.style.backgroundColor=t[n]||t.info,document.body.appendChild(s),setTimeout(()=>{s.style.transform="translateX(0)"},100),setTimeout(()=>{s.style.transform="translateX(100%)",setTimeout(()=>{s.parentNode&&s.parentNode.removeChild(s)},300)},3e3)}}document.addEventListener("DOMContentLoaded",()=>{window.pwaApp=new d});window.addEventListener("beforeinstallprompt",a=>{a.preventDefault(),window.pwaApp&&window.pwaApp.showNotification("Altis can be installed on your device!","info")});window.addEventListener("appinstalled",()=>{console.log("PWA was installed"),window.pwaApp&&window.pwaApp.showNotification("Altis installed successfully!","success")});window.addEventListener("online",()=>{window.pwaApp&&window.pwaApp.showNotification("You are back online!","success")});window.addEventListener("offline",()=>{window.pwaApp&&window.pwaApp.showNotification("You are offline. Some features may be limited.","warning")});
